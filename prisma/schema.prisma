// Prisma schema file,

// the datasource API block
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
   shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}


// the generator API block
// for indicating the assets to be created upon running the prisma generate command 
generator client {
  provider = "prisma-client-js"
}

// the data model definitions
// these map to tables on postgreSQL

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  lead      Person @relation(fields: [leadId], references: [id])
  leadId    Int  // relation scalar field, used in @relation attribute above.  This side of the relation stores the foreign key in the db
  active    Boolean @default(false)
  userId    Int?  
}

model User {
  id        Int      @id @default(autoincrement())
  name      String?
  email     String?  @unique
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  @@map(name: "users")
}

model Person {
  id          Int     @id @default(autoincrement())
  name        String?
  email       String @unique
  status      String?
  label       String?
  connections String?
  missions    Post[]
  onMission   Boolean @default(false)

  @@map(name: "people")
}

model Starship {
  id            Int  @id @default(autoincrement())
  name          String
  model         String
  manufacturer  String
  crew          Int
  passengers    Int
  starshipClass String
  pilots        String[]
  ready         Boolean
  launched      Boolean
}